$date
	Sun Dec 29 04:03:11 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var integer 32 # counter [31:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % outfile [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$scope module ALU $end
$var wire 1 & zero_o $end
$var wire 32 ' b_i [31:0] $end
$var wire 4 ( aluctr_i [3:0] $end
$var wire 32 ) a_i [31:0] $end
$var reg 32 * result_o [31:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 7 + funct7_i [6:0] $end
$var wire 3 , funct3_i [2:0] $end
$var wire 2 - aluop_i [1:0] $end
$var reg 4 . aluctr_o [3:0] $end
$upscope $end
$scope module Control $end
$var wire 6 / part_opcode_i [5:0] $end
$var reg 2 0 aluop_o [1:0] $end
$var reg 1 1 alusrc_o $end
$var reg 1 2 regwrite_o $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 3 instr_o [31:0] $end
$var wire 32 4 addr_i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 1 sel_i $end
$var wire 32 5 y_o [31:0] $end
$var wire 32 6 b_i [31:0] $end
$var wire 32 7 a_i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 8 pc_i [31:0] $end
$var reg 32 9 pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 : RDaddr_i [4:0] $end
$var wire 32 ; RDdata_i [31:0] $end
$var wire 5 < RS1addr_i [4:0] $end
$var wire 32 = RS1data_o [31:0] $end
$var wire 5 > RS2addr_i [4:0] $end
$var wire 32 ? RS2data_o [31:0] $end
$var wire 1 2 RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var integer 32 @ i [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 12 A imm_i [11:0] $end
$var wire 32 B immext_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 B
b1010 A
b100000 @
b0 ?
b1010 >
b0 =
b0 <
b1010 ;
b101 :
b0 9
b100 8
b0 7
b1010 6
b1010 5
b0 4
b101000000000001010010011 3
12
11
b0 0
b1001 /
b0 .
b0 -
b0 ,
b0 +
b1010 *
b0 )
b0 (
b1010 '
0&
b11 %
b100000000 $
b0 #
0"
0!
$end
#12
1"
#25
b1101 *
b1101 ;
b1101 '
b1101 5
b1101 >
b110 :
b1101 6
b1101 B
b1101 A
b110100000000001100010011 3
b1000 8
b100 4
b100 9
b1 #
1!
#50
0!
#75
b1111 (
b1111 .
01
b10 -
b10 0
b10000010 *
b10000010 ;
b1101 '
b1101 5
b11001 /
b1010 )
b1010 =
b101 <
b1101 7
b1101 ?
b110 >
b111 :
b100110 6
b100110 B
b100110 A
b1 +
b10011000101000001110110011 3
b1100 8
b1000 4
b1000 9
b10 #
1!
#100
0!
#125
b10101001 *
b10101001 ;
b1101 )
b1101 =
b110 <
b11100 :
b10011000110000111000110011 3
b10000 8
b1100 4
b1100 9
b11 #
1!
#150
0!
#175
b1100 *
b1100 ;
11
b0 -
b0 0
b11111111111111111111111111111111 '
b11111111111111111111111111111111 5
b0 (
b0 .
b1001 /
b0 7
b0 ?
b11111 >
b110 :
b11111111111111111111111111111111 6
b11111111111111111111111111111111 B
b111111111111 A
b1111111 +
b11111111111100110000001100010011 3
b10100 8
b10000 4
b10000 9
b100 #
1!
#200
0!
#225
b11111 '
b11111 5
b0 <
b11110 :
b11111 6
b11111 B
b11111 A
b0 +
b11111 *
b11111 ;
b1111100000000111100010011 3
b0 )
b0 =
b11000 8
b10100 4
b10100 9
b101 #
1!
#250
0!
#275
1&
b111 (
b111 .
01
b10 -
b10 0
b0 *
b0 ;
b10000010 '
b10000010 5
b11001 /
b1100 )
b1100 =
b110 <
b10000010 7
b10000010 ?
b111 >
b11100 :
b111 6
b111 B
b111 A
b111 ,
b11100110111111000110011 3
b11100 8
b11000 4
b11000 9
b110 #
1!
#300
0!
#325
0&
b10000010 *
b10000010 ;
b100 (
b100 .
b0 )
b0 =
b11100 <
b11101 :
b100 ,
b11111100100111010110011 3
b100000 8
b11100 4
b11100 9
b111 #
1!
#350
0!
#375
1&
b0 *
b0 ;
b0 '
b0 5
b1010 <
b0 7
b0 ?
b1101 >
b1110 :
b1101 6
b1101 B
b1101 A
b110101010100011100110011 3
b100100 8
b100000 4
b100000 9
b1000 #
1!
#400
0!
#425
0&
b11111111111111111111111101111110 *
b11111111111111111111111101111110 ;
b10000010 '
b10000010 5
b1000 (
b1000 .
b11100 <
b10000010 7
b10000010 ?
b111 >
b101 :
b10000000111 6
b10000000111 B
b10000000111 A
b100000 +
b0 ,
b1000000011111100000001010110011 3
b101000 8
b100100 4
b100100 9
b1001 #
1!
#450
0!
#475
0&
b11111111111111111111111111111000 *
b11111111111111111111111111111000 ;
11
b0 -
b0 0
b11111111111111111111111111111000 '
b11111111111111111111111111111000 5
b0 (
b0 .
b1001 /
b11111 <
b0 7
b0 ?
b11000 >
b11111 :
b11111111111111111111111111111000 6
b11111111111111111111111111111000 B
b111111111000 A
b1111111 +
b11111111100011111000111110010011 3
b101100 8
b101000 4
b101000 9
b1010 #
1!
#500
0!
#525
b11111111111111111111111111110000 *
b11111111111111111111111111110000 ;
b11111111111111111111111111111000 )
b11111111111111111111111111111000 =
b110000 8
b101100 4
b101100 9
b1011 #
1!
#550
0!
#575
b11111111111111111111111111101000 *
b11111111111111111111111111101000 ;
b110100 8
b110000 4
b110000 9
b11111111111111111111111111110000 )
b11111111111111111111111111110000 =
b1100 #
1!
#600
0!
#625
b111111 '
b111111 5
b0 <
b11111111111111111111111111101000 7
b11111111111111111111111111101000 ?
b11111 >
b111 :
b111111 6
b111111 B
b111111 A
b1 +
b111111 *
b111111 ;
b11111100000000001110010011 3
b0 )
b0 =
b111000 8
b110100 4
b110100 9
b1101 #
1!
#650
0!
#675
b1111 *
b1111 ;
b10000000010 '
b10000000010 5
b1101 (
b1101 .
b111111 )
b111111 =
b111 <
b0 7
b0 ?
b10 >
b10000000010 6
b10000000010 B
b10000000010 A
b100000 +
b101 ,
b1000000001000111101001110010011 3
b111100 8
b111000 4
b111000 9
b1110 #
1!
#700
0!
#725
b11 *
b11 ;
b1111 )
b1111 =
b1000000 8
b111100 4
b111100 9
b1111 #
1!
#750
0!
#775
1&
b0 *
b0 ;
b1000100 8
b1000000 4
b1000000 9
b11 )
b11 =
b10000 #
1!
#800
0!
#825
0&
b110 *
b110 ;
b10000000001 '
b10000000001 5
b110 <
b1 >
b110 :
b10000000001 6
b10000000001 B
b10000000001 A
b1000000000100110101001100010011 3
b1100 )
b1100 =
b1001000 8
b1000100 4
b1000100 9
b10001 #
1!
#850
0!
#875
b11 *
b11 ;
b1001100 8
b1001000 4
b1001000 9
b110 )
b110 =
b10010 #
1!
#900
0!
#925
b1 *
b1 ;
b11 )
b11 =
b1010000 8
b1001100 4
b1001100 9
b10011 #
1!
#950
0!
#975
01
b10 -
b10 0
b1 '
b1 5
b1 (
b1 .
b11001 /
b11111 <
b1 7
b1 ?
b110 >
b11111 :
b110 6
b110 B
b110 A
b0 +
b1 ,
b11011111001111110110011 3
0&
b11111111111111111111111111010000 *
b11111111111111111111111111010000 ;
b1010100 8
b1010000 4
b1010000 9
b11111111111111111111111111101000 )
b11111111111111111111111111101000 =
b10100 #
1!
#1000
0!
#1025
b11111111111111111111111110100000 *
b11111111111111111111111110100000 ;
b11111111111111111111111111010000 )
b11111111111111111111111111010000 =
b1011000 8
b1010100 4
b1010100 9
b10101 #
1!
#1050
0!
#1075
02
b0 -
b0 0
1&
b0 '
b0 5
b0 (
b0 .
b0 /
b0 <
b0 7
b0 ?
b0 >
b0 :
b0 6
b0 B
b0 A
b0 ,
b0 3
b0 *
b0 ;
b1011100 8
b1011000 4
b1011000 9
b0 )
b0 =
b10110 #
1!
#1100
0!
#1125
b1100000 8
b1011100 4
b1011100 9
b10111 #
1!
#1150
0!
#1175
b1100100 8
b1100000 4
b1100000 9
b11000 #
1!
#1200
0!
#1225
b1101000 8
b1100100 4
b1100100 9
b11001 #
1!
#1250
0!
#1275
b1101100 8
b1101000 4
b1101000 9
b11010 #
1!
#1300
0!
#1325
b1110000 8
b1101100 4
b1101100 9
b11011 #
1!
#1350
0!
#1375
b1110100 8
b1110000 4
b1110000 9
b11100 #
1!
#1400
0!
#1425
b1111000 8
b1110100 4
b1110100 9
b11101 #
1!
#1450
0!
#1475
b1111100 8
b1111000 4
b1111000 9
b11110 #
1!
#1500
0!
#1525
b10000000 8
b1111100 4
b1111100 9
1!
